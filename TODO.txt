HLMS Editor:
===========
- When loading a mesh, first delete the mesh with the same name

Plugin:
======
- Implement macroblocks, blendblocks and samplers; they are currently fixed
- Parse animations, assets and skins, possibly scene, ...
- Add Sparse class to Accessor and implement Parsing Sparse objects
- Init gLTF in gLTFTest application, so texture tranformation is possible (and the #define can be removed)
- Vertex count is derived from position vertices. Validate whether this is correct
- Implement (morph) targets in Primitives
- Implement point_list, line_list, triangle_strip and triangle_fan
- Check whether colours_specular, tangent_dimensions, binormals should be implemented in the mesh xml file (it is specified in Ogre xml)
- Determine when to create a metallic texture. This is standard, but doesn't always gives a good result
- Implement 'out' function for all model classes (primitive, accessor, ...)
- Bug: Project GearboxAssy and Buggy are not loaded properly. Some parts are missing
- Bug: Materials of project polly incorrect. Transparent thing in the front is not transparent and the dog is not textured
- Bug: Materials of adam head (Unity) incorrect?
- Bug: Values of min/max are probably implemented incorrect
- Bug?: The HLMS Editor sometimes crashes when the first import is done. Maybe because some variable is not initialized? Solved?



DONE:
- Use shared vertices? ==> Not for now; usesharedvertices is always 'false'
- Use 16 and 32 bit indices ==> No, only use 32 bit
- Bug? Loading the binary corset model gives an error (no valid json)
- Add possibility to process embedded base64 data in gTLF files
- gLTFImportAccessorsParser --> parse and implement min/max in Accessors
- colours_diffuse should be implemented in the mesh xml file (it is specified in Ogre xml). This is mapped to COLOR_0
- Test transparent materials --> Polly material seems sort of ok. More testing is needed, but I need other models for it (ongoing effort)
- Parse nodes
- After importing a gltf, load the HLMS material and load (import) the Mesh.
- After importing a gltf, create a project with all the materials in the material browser.
- Change interface; add map 'references' with key/value pairs (e.g. 'mesh' --> meshfile.xml; 'material' --> material file; 'project' --> project file, etc.)
- Godot engine swaps the v2 and v3 indexed in a face (swap around indices, convert ccw to cw for front face). Test this in the plugin --> This implies the addition
  of a makroblock with the setting 'anticlockwise'. Therefor we do not swap indexes 2 and 3!
- Implement (matrix) transformation. Needed to propagate node transformation to child nodes? Some models do not look ok. Maybe the transformation is incorrect (not sure)
- Bytestride is not used to jump in a buffer; currently is assumed that data is aligned per type (positions together, normals together, ..); 
  interleaved data is more efficient to store vertices. This is a must-have
- Bug: Error in mesh <--> material
- Bug: Some materials do not have any images, but the PBS json file does have images
- Bug: Project Polly is not loaded properly. Same with GearboxAssy and Buggy. Something to do with transformations?
- Bug? Warehouse has a lamp with incorrect transformation. Is not visible in a gLTF loader.
- Bug: CesiumMilkTruck has windows floating in the sky
- Add KHR_ extensions to read Unity gLTF models and materials
- Bug: Selecting 'edit material of selected (sub)mesh' crashes application in some case (see mode 'varignana')
- Bug: Selecting 'edit material of selected (sub)mesh' crashes when the material is [Default]

Not specified in gLTF:
- How to implement reflection? (using dds cubemaps)
- Level of detail implemented in gLTF?
